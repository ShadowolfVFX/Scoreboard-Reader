name: Build and Publish Electron App
on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-vscode'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        run: |
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip setuptools
          npm install

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: "no-cache-${{ github.run_id }}"

      - name: Install Node Dependencies
        run: npm install

      - name: Build Tailwind CSS
        run: npm run build:css

      - name: Build/Package Application Artifacts
        # Assumes 'npm run build' in package.json uses 'electron-builder --publish never'
        run: npm run build

      - name: Create Standard GitHub Release
        if: startsWith(github.ref, 'refs/tags/v') && !endsWith(github.ref, '-vscode')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create VS Code GitHub Release
        if: startsWith(github.ref, 'refs/tags/v') && endsWith(github.ref, '-vscode')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.zip
          name: "VS Code Build ${{ github.ref_name }}"
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}